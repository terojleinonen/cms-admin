name: Permission System Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run regression tests daily at 2 AM UTC
    - cron: '0 2 * * *'

jobs:
  permission-tests:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci --legacy-peer-deps
    
    - name: Setup test environment
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        NEXTAUTH_SECRET: test-secret
        NEXTAUTH_URL: http://localhost:3000
      run: |
        cp .env.test .env
        npx prisma migrate deploy
        npx prisma db seed
    
    - name: Run permission unit tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      run: npm run test -- --testPathPatterns="permission|auth|role" --coverage
    
    - name: Run permission integration tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      run: npm run test -- --testPathPatterns="integration.*permission"
    
    - name: Run API permission tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      run: npm run test -- --testPathPatterns="api.*permission"
    
    - name: Run E2E permission tests
      env:
        DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
      run: npm run test -- --testPathPatterns="e2e.*permission"
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: permission-test-results
        path: |
          coverage/
          test-results/
    
    - name: Comment PR with test results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          if (fs.existsSync('coverage/coverage-summary.json')) {
            const coverage = JSON.parse(fs.readFileSync('coverage/coverage-summary.json'));
            const comment = `## Permission Test Results
            
            **Coverage Summary:**
            - Lines: ${coverage.total.lines.pct}%
            - Functions: ${coverage.total.functions.pct}%
            - Branches: ${coverage.total.branches.pct}%
            - Statements: ${coverage.total.statements.pct}%
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          }